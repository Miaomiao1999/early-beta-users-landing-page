figure (1) , clf
% Figure must have focus before ginput can receive input , %soIsetx−axisandy−axistobefrom0to1.

axis ([0 ,1 ,0 ,1]) ,
grid on, % add grids
hold on % retain current plot when adding new plots to the axes

% n is the number of points needed to construct a curve .
n = input(’How many points do you want to collect?’);

% Use the mouse and click on the points I want to collect .
x = zeros(n,1); y = zeros(n,1);

% Create a for loop to repeat the process of locating those points and %plotthemascircles.
fori=1:n
[x(i),y(i)] = ginput(1); plot(x(i), y(i), ’o’)
end
% After I have selected all of the points , cubic splines are used to % generate the curves through the points .
% One approach uses ParSpline1 .m and the other approach uses

ParSpline2 .m.
[xvals1 , yvals1] = ParSpline1(x, y); [xvals2 , yvals2] = ParSpline2(x, y);

% plot the curve generated by ParSpline1 using dashes ,
% and the curve generated by ParSpline2 as a solid curve
F1=plot(xvals1, yvals1, ’−−’); F2=plot(xvals2, yvals2);
% Both curves are plotted on the same axes
legend ([F1,
drawnow hold off grid off
F2] ,
’ParSpline1
curve ’ ,
’ParSpline2
curve ’)
drawnow
hold off
grid off

ParSpline1.m Function
function [xvals1 , yvals1] = ParSpline1(x, y) t = 1:length(x);
% xx1 is a set of 500 values to be evaluated
xx1 = linspace (1 , length (x) ,500) ;
% output xvals and yvals are vectors containing
% 500 values of Sx(t) and Sy(t)
xvals1 = spline(t, x, xx1); yvals1 = spline(t, y, xx1);

ParSpline2.m Function
function [xvals2 , yvals2] = ParSpline2(x, y)
t= zeros(1,length(x)); t(1) = 0;
for i = 2:length(x)
t(i) = t(i−1) + sqrt((x(i)−x(i−1))ˆ2 + (y(i)−y(i−1))ˆ2);
end
% xx2 is a set of 500 values to be evaluated
xx2 = linspace(0, t(length(x)) ,500);
% output xvals and yvals are vectors containing % 500 values of Sx(t) and Sy(t)
xvals2 = spline(t, x, xx2); yvals2 = spline(t, y, xx2);
